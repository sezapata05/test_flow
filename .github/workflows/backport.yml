name: Backport to Dev
on:
  push:
    branches:
      - master
jobs:
  backport:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT }}
    
    - name: Set up Git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
    
    - name: Get last commit author
      id: get_author
      run: |
        AUTHOR=$(git log -1 --pretty=format:'%an <%ae>')
        AUTHOR_USERNAME=$(echo $AUTHOR | sed -n 's/.*<\(.*\)@.*/\1/p')
        echo "author=$AUTHOR" >> $GITHUB_OUTPUT
        echo "username=$AUTHOR_USERNAME" >> $GITHUB_OUTPUT
    
    - name: Update dev branch
      run: |
        git fetch origin dev
        if git rev-parse --verify origin/dev > /dev/null 2>&1; then
          echo "Dev branch exists, updating..."
          git checkout dev
          git merge origin/master --no-edit
        else
          echo "Dev branch does not exist. Creating it from master."
          git checkout -b dev origin/master
        fi
        git push origin dev
    
    - name: Check for differences
      id: check_diff
      run: |
        git diff --quiet origin/dev...origin/master || echo "has_changes=true" >> $GITHUB_OUTPUT
    
    - name: Create Pull Request if needed
      if: steps.check_diff.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.PAT }}
        branch: backport-to-dev
        base: dev
        title: 'Backport: Merge master into dev'
        body: |
          Este PR backporta los cambios de master a dev.
          Por favor, revise los cambios y apruebe el PR si todo está correcto.
          
          Último autor del commit en master: ${{ steps.get_author.outputs.author }}
        draft: true
        labels: |
          backport
          needs review
        assignees: ${{ steps.get_author.outputs.username }}
    
    - name: Notify status
      run: |
        if [ "${{ steps.check_diff.outputs.has_changes }}" == "true" ]; then
          echo "Se ha creado un PR para backport de master a dev."
        else
          echo "No hay cambios adicionales para backport de master a dev."
        fi
        echo "Estado actual de las ramas:"
        git show-branch master dev
    
    - name: Check for open PRs
      run: |
        pr_count=$(gh pr list --base dev --head backport-to-dev --json number --jq length)
        echo "Número de PRs abiertos de backport-to-dev a dev: $pr_count"
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

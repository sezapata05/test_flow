name: Fast-forward Dev to Master

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  fast-forward-dev:
    name: Fast-forward Dev to Master
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Fast-forward Dev to Master
        run: |
          git fetch origin master dev
          
          # Verificar si dev está detrás de master
          if git merge-base --is-ancestor origin/dev origin/master; then
            echo "Dev está detrás de master. Realizando fast-forward..."
            git checkout dev
            git merge --ff-only origin/master
            git push origin dev
          else
            echo "Dev no está detrás de master. No se puede realizar fast-forward."
            exit 1
          fi

      - name: Create Pull Request if needed
        if: failure()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-dev-from-master
          base: dev
          title: 'Update Dev from Master'
          body: |
            No se pudo realizar un fast-forward de Dev a Master.
            Este PR contiene los cambios necesarios para actualizar Dev.
            
            Por favor, revise los cambios y resuelva cualquier conflicto si es necesario.
          labels: update, needs review

      - name: Notify status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "Dev ha sido actualizado exitosamente con los cambios de Master."
          else
            echo "No se pudo actualizar Dev automáticamente. Se ha creado un PR para revisión manual."
          fi
# name: Backport from Master to Dev

# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - master

# jobs:
#   backport-to-dev:
#     name: Backport to Dev
#     if: github.event.pull_request.merged == true
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#           token: ${{ secrets.PAT }}

#       - name: Set up Git
#         run: |
#           git config user.name github-actions
#           git config user.email github-actions@github.com

#       - name: Create backport branch
#         run: |
#           git fetch origin dev
#           git checkout -b backport-to-dev origin/dev
          
#           # Obtener el commit de merge
#           MERGE_COMMIT_SHA=${{ github.event.pull_request.merge_commit_sha }}
          
#           # Obtener los padres del commit de merge
#           PARENT1=$(git rev-parse $MERGE_COMMIT_SHA^1)
#           PARENT2=$(git rev-parse $MERGE_COMMIT_SHA^2)
          
#           # Crear un nuevo commit con los cambios del merge
#           git cherry-pick -m 1 $MERGE_COMMIT_SHA || {
#             echo "Conflicto en cherry-pick. Resolviendo automáticamente..."
#             git cherry-pick --abort
#             git diff $PARENT1..$PARENT2 | git apply
#             git add .
#             git commit -m "Backport changes from $MERGE_COMMIT_SHA"
#           }

#       - name: Push changes
#         run: |
#           git push origin backport-to-dev
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT }}

#       - name: Create Pull Request
#         uses: peter-evans/create-pull-request@v5
#         with:
#           token: ${{ secrets.PAT }}
#           branch: backport-to-dev
#           base: dev
#           title: '[Backport] ${{ github.event.pull_request.title }}'
#           body: |
#             Backport of #${{ github.event.pull_request.number }} to dev branch.
            
#             Original PR: ${{ github.event.pull_request.html_url }}
#           labels: backport
